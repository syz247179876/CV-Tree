# Ultralytics YOLO üöÄ, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Whether to enable performance analysis for each layer of the model
profile: true

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]  # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024]  # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768]   # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512]   # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512]   # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs

# input image size to model

resolution: 640

# the depth of MB4D/MB3D
depths: [3, 2, 6, 4]

# input the dim to each stage
embed_dims: [48, 96, 224, 448]

# if use MB3D, it works
multi_v: 4.

# if use MB3D, it works, multi-head number
num_head: 8

# the dimension of query and key
q_k_dim: 32

# if use MB4D, it works, pool kernel size
pool_size: 3

# channel expansion rate of MLP layer
mlp_ratio: 4.

# used in FFN3D/FFN4D
drop_ratio: 0.

# used in Residual Block
drop_path_ratio: 0.

# the number of MB3D
vit_num: 1

# ensure that the gradients contributed by each branch are more balanced
use_layer_scale: true

layer_scale_init_value: 1e-5

# downsample kernel size
down_patch_size: 3

# downsample stride
down_stride: 2

# used in MB3D
norm_layer: 'ln'

# used in MB3D/MB4D
act_layer: 'gelu'

# EfficientFormer backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, EfficientFormerStem, [48]] # /4
  - [-1, 1, EFMetaBlock, [0]]
  - [-1, 1, EfficientFormerPM, [96]]   # /8
  - [-1, 1, EFMetaBlock, [1]]
  - [-1, 1, EfficientFormerPM, [224]]  # /16
  - [-1, 1, EFMetaBlock, [2]]
  - [-1, 1, EfficientFormerPM, [448]]  # /32
  - [-1, 1, EFMetaBlock, [3]]
  - [-1, 1, SPPF, [1024, 5]]  # 8

# YOLOv8.0n head
head:
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 5], 1, Concat, [1]]  # cat backbone P4
  # ËøôÈáåÁöÑ3Ë°®Á§∫c2f‰∏≠ÈáçÂ§çÁöÑBottleneck‰∏™Êï∞
  - [-1, 1, C2f, [512]]  # 11

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 3], 1, Concat, [1]]  # cat backbone P3
  - [-1, 2, C2f, [256]]  # 14 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]]
  - [[-1, 11], 1, Concat, [1]]  # cat head P4
  - [-1, 3, C2f, [512]]  # 17 (P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]]
  - [[-1, 8], 1, Concat, [1]]  # cat head P5
  - [-1, 3, C2f, [1024]]  # 20 (P5/32-large)

  # Ëß£ËÄ¶Â§¥
  - [[14, 15, 20], 1, Detect, [nc]]  # Detect(P3, P4, P5)
