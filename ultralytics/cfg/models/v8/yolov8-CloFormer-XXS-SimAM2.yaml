# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Whether to enable performance analysis for each layer of the model
profile: true

# Parameters
nc: 20  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]  # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024]  # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768]   # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512]   # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512]   # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs

#activation: nn.ReLU()

attn_drop: 0.

mlp_drop: 0.

drop_path_rate: 0.

qkv_bias: True

depths: [1, 1, 1, 1, 5, 1, 1, 1]



# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, CloFormerRepStem, [32]]  # 0-P1/4
  - [-1, 1, CloLayer, [32, 0, 4, [3, 1], [3], 8, 5, 4, True, False]] # 1-P2/4
#  - [-1, 1, CloBlock, [64, 1, 4, [3, 1], [3], 8, 5, 4, 2, True]] # downsample
  - [-1, 1, CBTokenMixer, [32, 1, 4, [3, 1], [3], 8, True]]
  - [-1, 1, CBConvFFN, [64, 1, 5, 4, 2]] # downsample
  - [-1, 1, CloLayer, [64, 2, 4, [2, 2], [5], 4, 5, 4, True, False]] # 4-P3/8
#  - [-1, 1, CloBlock, [128, 3, 4, [2, 2], [5], 4, 5, 4, 2, True]]
  - [-1, 1, CBTokenMixer, [64, 3, 4, [2, 2], [5], 4, True]]
  - [-1, 1, CBConvFFN, [128, 3, 5, 4, 2]] # downsample
  - [-1, 5, CloLayer, [128, 4, 8, [4, 4], [7], 2, 5, 4, True, False]] # 7-P4/16
  # - [-1, 1, CloBlock, [256, 5, 8, [4, 4], [7], 2, 5, 2, 2, True]]
  - [-1, 1, CBTokenMixer, [128, 5, 8, [4, 4], [7], 2, True]]
  - [-1, 1, CBConvFFN, [256, 5, 5, 4, 2]] # downsample
  - [-1, 1, CloLayer, [256, 6, 16, [4, 12], [9], 1, 5, 2, True, False]] # 10-P5/32
  - [-1, 1, CloBlock, [256, 7, 16, [4, 12], [9], 1, 5, 2, 1, True]]
  - [-1, 1, SPPF, [1024, 5]]  # 12

# YOLOv8.0n head
head:
  - [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ]
  - [ [ -1, 8 ], 1, Concat, [ 1 ] ]  # cat backbone P4
  - [ -1, 3, C2f, [ 512 ] ]  # 15 (P4/16-medium)

  - [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ]
  - [ [ -1, 5 ], 1, Concat, [ 1 ] ]  # cat backbone P3
  - [ -1, 3, C2f, [ 256 ] ]  # 18 (P3/8-small)

  - [ -1, 1, Conv, [ 256, 3, 2 ] ]
  - [ [ -1, 15 ], 1, Concat, [ 1 ] ]  # cat head P4
  - [ -1, 3, C2f, [ 512 ] ]  # 21 (P4/16-medium)

  - [ -1, 1, Conv, [ 512, 3, 2 ] ]
  - [ [ -1, 12 ], 1, Concat, [ 1 ] ]  # cat head P5
  - [ -1, 3, C2f, [ 1024 ] ]  # 24 (P5/32-large)

  # è§£è€¦å¤´
  - [[18, 21, 24], 1, Detect, [nc]]  # Detect(P3, P4, P5)
